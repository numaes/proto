<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="README_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Proto<sp/>Runtime<sp/>Library</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`proto`<sp/>library<sp/>is<sp/>a<sp/>high-performance<sp/>runtime<sp/>environment<sp/>designed<sp/>for<sp/>programming<sp/>languages,<sp/>emphasizing<sp/>immutable<sp/>data<sp/>structures,<sp/>a<sp/>flexible<sp/>prototype-based<sp/>object<sp/>model,<sp/>and<sp/>an<sp/>advanced<sp/>concurrent<sp/>garbage<sp/>collection<sp/>system.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Key<sp/>Features</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Immutable<sp/>Data<sp/>Structures</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">`proto`<sp/>provides<sp/>core<sp/>data<sp/>structures<sp/>that<sp/>are<sp/>inherently<sp/>immutable,<sp/>enhancing<sp/>system<sp/>safety<sp/>and<sp/>concurrency:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Lists<sp/>(`ProtoList`):**<sp/>Implemented<sp/>as<sp/>balanced<sp/>trees,<sp/>operations<sp/>on<sp/>lists<sp/>return<sp/>new<sp/>instances<sp/>rather<sp/>than<sp/>modifying<sp/>the<sp/>original,<sp/>ensuring<sp/>data<sp/>persistence.<sp/>Optimized<sp/>for<sp/>concurrent<sp/>environments.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Tuples<sp/>(`ProtoTuple`):**<sp/>Immutable<sp/>collections<sp/>similar<sp/>to<sp/>Python<sp/>tuples.<sp/>They<sp/>are<sp/>interned<sp/>to<sp/>optimize<sp/>memory<sp/>usage<sp/>and<sp/>comparisons,<sp/>and<sp/>are<sp/>implemented<sp/>using<sp/>search<sp/>trees<sp/>for<sp/>efficient<sp/>access<sp/>and<sp/>slicing.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Strings<sp/>(`ProtoString`):**<sp/>Immutable<sp/>and<sp/>built<sp/>upon<sp/>`ProtoTuple`,<sp/>benefiting<sp/>from<sp/>the<sp/>same<sp/>immutability<sp/>and<sp/>deduplication<sp/>optimizations.<sp/>String<sp/>operations<sp/>also<sp/>yield<sp/>new<sp/>string<sp/>instances.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Prototype-Based<sp/>Object<sp/>Model</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Inspired<sp/>by<sp/>languages<sp/>like<sp/>JavaScript<sp/>and<sp/>Self,<sp/>`proto`<sp/>features<sp/>a<sp/>dynamic<sp/>and<sp/>flexible<sp/>object<sp/>model:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Objects<sp/>(`ProtoObjectCell`):**<sp/>Objects<sp/>link<sp/>to<sp/>a<sp/>`parent`<sp/>(prototype)<sp/>and<sp/>manage<sp/>their<sp/>`attributes`<sp/>using<sp/>a<sp/>sparse<sp/>list.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Prototype-Based<sp/>Inheritance:**<sp/>Objects<sp/>inherit<sp/>properties<sp/>and<sp/>methods<sp/>from<sp/>their<sp/>`parent`<sp/>objects,<sp/>with<sp/>attribute<sp/>lookups<sp/>traversing<sp/>the<sp/>prototype<sp/>chain.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Cloning<sp/>and<sp/>Child<sp/>Creation:**<sp/>Objects<sp/>can<sp/>be<sp/>cloned<sp/>or<sp/>new<sp/>objects<sp/>can<sp/>be<sp/>created<sp/>that<sp/>directly<sp/>inherit<sp/>from<sp/>existing<sp/>prototypes.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Dynamic<sp/>Attributes:**<sp/>Attributes<sp/>can<sp/>be<sp/>added<sp/>or<sp/>modified<sp/>dynamically.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Method<sp/>Calling:**<sp/>A<sp/>robust<sp/>mechanism<sp/>for<sp/>invoking<sp/>object-associated<sp/>functions<sp/>through<sp/>the<sp/>prototype<sp/>chain.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Mutable<sp/>Objects:**<sp/>While<sp/>core<sp/>data<sp/>structures<sp/>are<sp/>immutable,<sp/>the<sp/>system<sp/>supports<sp/>mutable<sp/>objects,<sp/>with<sp/>their<sp/>visibility<sp/>and<sp/>collection<sp/>safely<sp/>managed<sp/>by<sp/>the<sp/>concurrent<sp/>GC.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Concurrent<sp/>Memory<sp/>Management<sp/>and<sp/>Garbage<sp/>Collection<sp/>(GC)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`proto`<sp/>runtime<sp/>boasts<sp/>a<sp/>sophisticated<sp/>memory<sp/>management<sp/>system<sp/>designed<sp/>for<sp/>minimal<sp/>overhead<sp/>and<sp/>high<sp/>concurrency:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Cell-Based<sp/>Allocation:**<sp/>All<sp/>runtime<sp/>objects<sp/>are<sp/>managed<sp/>in<sp/>fixed-size<sp/>(64-byte)<sp/>cells,<sp/>eliminating<sp/>fragmentation<sp/>and<sp/>enabling<sp/>a<sp/>fast,<sp/>simple<sp/>allocator.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Per-Thread<sp/>Memory<sp/>Pools:**<sp/>Each<sp/>thread<sp/>maintains<sp/>its<sp/>own<sp/>pool<sp/>of<sp/>free<sp/>cells,<sp/>allowing<sp/>for<sp/>near-instantaneous,<sp/>lock-free<sp/>memory<sp/>allocation.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Dedicated<sp/>Concurrent<sp/>GC:**<sp/>A<sp/>dedicated<sp/>GC<sp/>thread<sp/>(`gcThreadLoop`)<sp/>operates<sp/>in<sp/>parallel<sp/>with<sp/>application<sp/>threads,<sp/>minimizing<sp/>pauses.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Hybrid<sp/>GC<sp/>(Partial<sp/>Stop-the-World):**<sp/>The<sp/>GC<sp/>employs<sp/>a<sp/>brief<sp/>&quot;stop-the-world&quot;<sp/>phase<sp/>to<sp/>safely<sp/>collect<sp/>system<sp/>roots<sp/>(thread<sp/>stacks,<sp/>global<sp/>references).<sp/>The<sp/>subsequent<sp/>mark<sp/>and<sp/>sweep<sp/>phases<sp/>run<sp/>concurrently<sp/>with<sp/>application<sp/>execution,<sp/>leveraging<sp/>data<sp/>immutability<sp/>to<sp/>ensure<sp/>consistency.</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>**Optimized<sp/>Short-Lived<sp/>Object<sp/>Cleanup:**<sp/>An<sp/>asynchronous<sp/>analysis<sp/>pool<sp/>efficiently<sp/>reclaims<sp/>memory<sp/>from<sp/>short-lived<sp/>objects,<sp/>acting<sp/>as<sp/>a<sp/>generational<sp/>collection<sp/>mechanism.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building<sp/>the<sp/>Project</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>project<sp/>uses<sp/>`make`<sp/>for<sp/>its<sp/>build<sp/>system.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Prerequisites</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>`g++`<sp/>(GCC<sp/>C++<sp/>Compiler)</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/>`make`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Compilation<sp/>Instructions</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/><sp/>**Clone<sp/>the<sp/>repository:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>git<sp/>clone<sp/>&lt;repository_url&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>cd<sp/>proto</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><sp/>**Build<sp/>the<sp/>release<sp/>version<sp/>of<sp/>the<sp/>library:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>make<sp/>all</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/>will<sp/>compile<sp/>the<sp/>`proto`<sp/>library<sp/>and<sp/>create<sp/>`lib/libproto.a`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">3.<sp/><sp/>**Build<sp/>the<sp/>debug<sp/>version<sp/>of<sp/>the<sp/>library<sp/>and<sp/>the<sp/>test<sp/>executable:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>make<sp/>debug</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/>will<sp/>compile<sp/>the<sp/>debug<sp/>version<sp/>of<sp/>the<sp/>library<sp/>(`lib/libproto-debug.a`)<sp/>and<sp/>the<sp/>`test_proto`<sp/>executable<sp/>located<sp/>in<sp/>`bin/`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">4.<sp/><sp/>**Run<sp/>the<sp/>tests:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>make<sp/>test</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/>will<sp/>execute<sp/>the<sp/>`bin/test_proto`<sp/>program.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">5.<sp/><sp/>**Clean<sp/>the<sp/>build<sp/>artifacts:**</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```bash</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>make<sp/>clean</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>```</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>This<sp/>will<sp/>remove<sp/>all<sp/>compiled<sp/>objects,<sp/>debug<sp/>files,<sp/>and<sp/>generated<sp/>libraries.</highlight></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef>
</doxygen>
