<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="Cell_8cpp" kind="file" language="C++">
    <compoundname>Cell.cpp</compoundname>
    <includes refid="proto__internal_8h" local="yes">../headers/proto_internal.h</includes>
    <incdepgraph>
      <node id="1">
        <label>proto/core/Cell.cpp</label>
        <link refid="Cell_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../headers/proto.h</label>
        <link refid="proto_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../headers/proto_internal.h</label>
        <link refid="proto__internal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>atomic</label>
      </node>
      <node id="5">
        <label>condition_variable</label>
      </node>
      <node id="6">
        <label>thread</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceproto">proto</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Cell.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>2020-05-01</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>gamarino</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/proto_internal.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespaceproto" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceproto" kindref="compound">proto</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproto_1_1Cell_1aa801b086478d28adc0e10f1beeb06f8f" kindref="member">Cell::Cell</ref>(<ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref>*<sp/>context)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cada<sp/>Cell<sp/>recién<sp/>creada<sp/>se<sp/>registra<sp/>inmediatamente<sp/>en<sp/>el<sp/>contexto<sp/>actual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>para<sp/>la<sp/>gestión<sp/>de<sp/>memoria<sp/>y<sp/>el<sp/>seguimiento<sp/>del<sp/>recolector<sp/>de<sp/>basura.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context-&gt;<ref refid="classproto_1_1ProtoContext_1ab1bd40ac39479f5bd22125aa462236c2" kindref="member">addCell2Context</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Es<sp/>una<sp/>buena<sp/>práctica<sp/>usar<sp/>&apos;=<sp/>default&apos;<sp/>para<sp/>destructores<sp/>simples<sp/>en<sp/>C++<sp/>moderno.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classproto_1_1Cell_1a2e1c6371e6cda1444a1cf181d9733b6f" kindref="member">Cell::~Cell</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classproto_1_1Cell_1a887c7760c78563a4d5d805019d9abe6d" kindref="member">Cell::getHash</ref>(<ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref>*<sp/>context)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>El<sp/>hash<sp/>de<sp/>una<sp/>Cell<sp/>se<sp/>deriva<sp/>directamente<sp/>de<sp/>su<sp/>dirección<sp/>de<sp/>memoria.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Esto<sp/>proporciona<sp/>un<sp/>identificador<sp/>rápido<sp/>y<sp/>único<sp/>para<sp/>el<sp/>objeto.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unionproto_1_1ProtoObjectPointer" kindref="compound">ProtoObjectPointer</ref><sp/>p;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="unionproto_1_1ProtoObjectPointer_1aae725e4c4a5c43b9a6a67475dde72ca5" kindref="member">oid</ref>.oid<sp/>=<sp/>(<ref refid="classproto_1_1ProtoObject" kindref="compound">ProtoObject</ref>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.<ref refid="unionproto_1_1ProtoObjectPointer_1ac4bd780bb4469b71dd96a4cd40ffeda0" kindref="member">asHash</ref>.<ref refid="unionproto_1_1ProtoObjectPointer_1ae940efe69bbe04488a05aa5b3b05e6c6" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementación<sp/>base<sp/>para<sp/>la<sp/>finalización.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Las<sp/>clases<sp/>derivadas<sp/>deben<sp/>sobreescribir<sp/>este<sp/>método<sp/>si<sp/>necesitan<sp/>realizar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>alguna<sp/>limpieza<sp/>antes<sp/>de<sp/>ser<sp/>reclamadas<sp/>por<sp/>el<sp/>recolector<sp/>de<sp/>basura.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classproto_1_1Cell_1ad735bdd8ebd04ccdc9b09a84a2e251f5" kindref="member">Cell::finalize</ref>(<ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref>*<sp/>context)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>hace<sp/>nada<sp/>en<sp/>la<sp/>clase<sp/>base.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sobrecarga<sp/>del<sp/>operador<sp/>&apos;new&apos;<sp/>para<sp/>usar<sp/>el<sp/>asignador<sp/>de<sp/>memoria<sp/>del<sp/>contexto.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>Cell::operator<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>size,<sp/><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref>*<sp/>context)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>context-&gt;<ref refid="classproto_1_1ProtoContext_1ae745299c9d7a29df4ee88c14bc246ea5" kindref="member">allocCell</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementación<sp/>base<sp/>para<sp/>el<sp/>recorrido<sp/>de<sp/>referencias<sp/>del<sp/>recolector<sp/>de<sp/>basura.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Las<sp/>clases<sp/>derivadas<sp/>DEBEN<sp/>sobreescribir<sp/>este<sp/>método<sp/>para<sp/>llamar<sp/>al<sp/>&apos;method&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>en<sp/>cada<sp/>ProtoObject*<sp/>o<sp/>Cell*<sp/>que<sp/>contengan,<sp/>permitiendo<sp/>al<sp/>GC<sp/>marcar<sp/>los<sp/>objetos<sp/>alcanzables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classproto_1_1Cell_1ae0fff4dcdc764ee26eb2514819df1548" kindref="member">Cell::processReferences</ref>(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>self,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*method)(</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>self,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproto_1_1Cell" kindref="compound">Cell</ref>*<sp/>cell</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>hace<sp/>nada<sp/>en<sp/>la<sp/>clase<sp/>base,<sp/>ya<sp/>que<sp/>no<sp/>contiene<sp/>referencias<sp/>a<sp/>otros<sp/>objetos.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="proto/core/Cell.cpp"/>
  </compounddef>
</doxygen>
