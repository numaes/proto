<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classproto_1_1ProtoMethodCellImplementation" kind="class" language="C++" prot="public">
    <compoundname>proto::ProtoMethodCellImplementation</compoundname>
    <basecompoundref refid="classproto_1_1Cell" prot="public" virt="non-virtual">proto::Cell</basecompoundref>
    <basecompoundref refid="classproto_1_1ProtoMethodCell" prot="public" virt="non-virtual">proto::ProtoMethodCell</basecompoundref>
    <includes refid="proto__internal_8h" local="no">proto_internal.h</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classproto_1_1ProtoMethodCellImplementation_1a947bfb13dcf04d26fcf55b4d14b18090" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceproto_1a072c9272d67309d7b1802c6fbddb71d8" kindref="member">ProtoMethod</ref></type>
        <definition>ProtoMethod proto::ProtoMethodCellImplementation::method</definition>
        <argsstring></argsstring>
        <name>method</name>
        <qualifiedname>proto::ProtoMethodCellImplementation::method</qualifiedname>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="proto/headers/proto_internal.h" line="736" column="21" bodyfile="proto/headers/proto_internal.h" bodystart="736" bodyend="736"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classproto_1_1ProtoMethodCellImplementation_1a17ae2368108c30b6ca190a4aad74c3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>proto::ProtoMethodCellImplementation::ProtoMethodCellImplementation</definition>
        <argsstring>(ProtoContext *context, ProtoMethod method)</argsstring>
        <name>ProtoMethodCellImplementation</name>
        <qualifiedname>proto::ProtoMethodCellImplementation::ProtoMethodCellImplementation</qualifiedname>
        <param>
          <type><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="namespaceproto_1a072c9272d67309d7b1802c6fbddb71d8" kindref="member">ProtoMethod</ref></type>
          <declname>method</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>El contexto de ejecución actual. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>Método a utilizar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kwargs</parametername>
</parameternamelist>
<parameterdescription>
<para>Una lista dispersa de argumentos por palabra clave. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="proto/headers/proto_internal.h" line="726" column="9" bodyfile="proto/core/ProtoMethodCell.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classproto_1_1ProtoMethodCellImplementation_1aacf108208e004aabece6437dc6896f30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classproto_1_1ProtoObject" kindref="compound">ProtoObject</ref> *</type>
        <definition>ProtoObject * proto::ProtoMethodCellImplementation::invoke</definition>
        <argsstring>(ProtoContext *context, ProtoList *args, ProtoSparseList *kwargs)</argsstring>
        <name>invoke</name>
        <qualifiedname>proto::ProtoMethodCellImplementation::invoke</qualifiedname>
        <param>
          <type><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type><ref refid="classproto_1_1ProtoList" kindref="compound">ProtoList</ref> *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="classproto_1_1ProtoSparseList" kindref="compound">ProtoSparseList</ref> *</type>
          <declname>kwargs</declname>
        </param>
        <briefdescription>
<para>Invoca el método C nativo encapsulado por esta celda. </para>
        </briefdescription>
        <detaileddescription>
<para>Esta función actúa como un puente entre el sistema de objetos de Proto y el código C nativo. Delega la llamada al puntero de función &apos;method&apos; que se almacenó durante la construcción.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>El contexto de ejecución actual. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>Una lista de argumentos posicionales para la función. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kwargs</parametername>
</parameternamelist>
<parameterdescription>
<para>Una lista dispersa de argumentos por palabra clave. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>El <ref refid="classproto_1_1ProtoObject" kindref="compound">ProtoObject</ref> resultante de la ejecución del método nativo. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="proto/headers/proto_internal.h" line="728" column="21" bodyfile="proto/core/ProtoMethodCell.cpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classproto_1_1ProtoMethodCellImplementation_1a0bcba5b0d535266613fb3c70c5855f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classproto_1_1ProtoObject" kindref="compound">ProtoObject</ref> *</type>
        <definition>ProtoObject * proto::ProtoMethodCellImplementation::asObject</definition>
        <argsstring>(ProtoContext *context) override</argsstring>
        <name>asObject</name>
        <qualifiedname>proto::ProtoMethodCellImplementation::asObject</qualifiedname>
        <reimplements refid="classproto_1_1Cell_1a97a913ac1976d28ca708a143aee37b66">asObject</reimplements>
        <param>
          <type><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Devuelve la representación de esta celda como un <ref refid="classproto_1_1ProtoObject" kindref="compound">ProtoObject</ref> genérico. </para>
        </briefdescription>
        <detaileddescription>
<para>Este método es esencial para que la celda se pueda manejar como un objeto de primera clase dentro del sistema Proto. Asigna el puntero &apos;this&apos; y establece el tag de puntero correcto para identificarlo como un método.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>El contexto de ejecución actual. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Un <ref refid="classproto_1_1ProtoObject" kindref="compound">ProtoObject</ref> que representa esta celda de método. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="proto/headers/proto_internal.h" line="729" column="21" bodyfile="proto/core/ProtoMethodCell.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classproto_1_1ProtoMethodCellImplementation_1a73028b00662d39c2219ba31b2f751ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned long</type>
        <definition>unsigned long proto::ProtoMethodCellImplementation::getHash</definition>
        <argsstring>(ProtoContext *context) override</argsstring>
        <name>getHash</name>
        <qualifiedname>proto::ProtoMethodCellImplementation::getHash</qualifiedname>
        <reimplements refid="classproto_1_1Cell_1a887c7760c78563a4d5d805019d9abe6d">getHash</reimplements>
        <param>
          <type><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Obtiene el código hash para esta celda. </para>
        </briefdescription>
        <detaileddescription>
<para>Reutiliza la implementación de la clase base &apos;<ref refid="classproto_1_1Cell" kindref="compound">Cell</ref>&apos;, que genera un hash basado en la dirección de memoria del objeto. Esto es eficiente y garantiza la unicidad del hash para cada instancia de celda.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>El contexto de ejecución actual. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>El valor del hash como un unsigned long. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="proto/headers/proto_internal.h" line="730" column="23" bodyfile="proto/core/ProtoMethodCell.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classproto_1_1ProtoMethodCellImplementation_1ad640e9564e43add91d60fcd61d763d68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void proto::ProtoMethodCellImplementation::finalize</definition>
        <argsstring>(ProtoContext *context) override</argsstring>
        <name>finalize</name>
        <qualifiedname>proto::ProtoMethodCellImplementation::finalize</qualifiedname>
        <reimplements refid="classproto_1_1Cell_1ad735bdd8ebd04ccdc9b09a84a2e251f5">finalize</reimplements>
        <param>
          <type><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Finalizador para la celda de método. </para>
        </briefdescription>
        <detaileddescription>
<para>Este método se llama antes de que el recolector de basura reclame la memoria del objeto. En este caso, no se necesita ninguna limpieza especial, ya que el puntero a la función no es un recurso que deba liberarse manualmente.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>El contexto de ejecución actual. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="proto/headers/proto_internal.h" line="731" column="14" bodyfile="proto/core/ProtoMethodCell.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classproto_1_1ProtoMethodCellImplementation_1a0c4a35dc3d25a6fb12a24ab16ac3241a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void proto::ProtoMethodCellImplementation::processReferences</definition>
        <argsstring>(ProtoContext *context, void *self, void(*method)(ProtoContext *context, void *self, Cell *cell)) override</argsstring>
        <name>processReferences</name>
        <qualifiedname>proto::ProtoMethodCellImplementation::processReferences</qualifiedname>
        <reimplements refid="classproto_1_1Cell_1ae0fff4dcdc764ee26eb2514819df1548">processReferences</reimplements>
        <param>
          <type><ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="classproto_1_1ProtoContext" kindref="compound">ProtoContext</ref> *context, void *<ref refid="classproto_1_1ProtoMethodCell_1a3913d179f95113c580ceba74a9a374a5" kindref="member">self</ref>, <ref refid="classproto_1_1Cell" kindref="compound">Cell</ref> *cell)</type>
          <declname>method</declname>
        </param>
        <briefdescription>
<para>Procesa las referencias para el recolector de basura. </para>
        </briefdescription>
        <detaileddescription>
<para>Esta implementación está vacía porque una <ref refid="classproto_1_1ProtoMethodCellImplementation" kindref="compound">ProtoMethodCellImplementation</ref> contiene un puntero a una función C, no referencias a otras &apos;Cells&apos; que el recolector de basura necesite rastrear. Es crucial que este método no procese &apos;this&apos; para evitar bucles infinitos en el GC.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>El contexto de ejecución actual. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>Puntero al objeto que se está procesando. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>Función de callback del GC para marcar referencias. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="proto/headers/proto_internal.h" line="732" column="14" bodyfile="proto/core/ProtoMethodCell.cpp" bodystart="102" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>proto::Cell</label>
        <link refid="classproto_1_1Cell"/>
      </node>
      <node id="3">
        <label>proto::ProtoMethodCell</label>
        <link refid="classproto_1_1ProtoMethodCell"/>
      </node>
      <node id="1">
        <label>proto::ProtoMethodCellImplementation</label>
        <link refid="classproto_1_1ProtoMethodCellImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>proto::Cell</label>
        <link refid="classproto_1_1Cell"/>
        <childnode refid="2" relation="usage">
          <edgelabel>nextCell</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>proto::ProtoMethodCell</label>
        <link refid="classproto_1_1ProtoMethodCell"/>
        <childnode refid="4" relation="usage">
          <edgelabel>method</edgelabel>
          <edgelabel>self</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>proto::ProtoMethodCellImplementation</label>
        <link refid="classproto_1_1ProtoMethodCellImplementation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>method</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>proto::ProtoObject</label>
        <link refid="classproto_1_1ProtoObject"/>
      </node>
    </collaborationgraph>
    <location file="proto/headers/proto_internal.h" line="723" column="5" bodyfile="proto/headers/proto_internal.h" bodystart="724" bodyend="737"/>
    <listofallmembers>
      <member refid="classproto_1_1ProtoMethodCellImplementation_1a0bcba5b0d535266613fb3c70c5855f43" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>asObject</name></member>
      <member refid="classproto_1_1Cell_1aa801b086478d28adc0e10f1beeb06f8f" prot="public" virt="non-virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>Cell</name></member>
      <member refid="classproto_1_1ProtoMethodCellImplementation_1ad640e9564e43add91d60fcd61d763d68" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>finalize</name></member>
      <member refid="classproto_1_1ProtoMethodCellImplementation_1a73028b00662d39c2219ba31b2f751ec9" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>getHash</name></member>
      <member refid="classproto_1_1ProtoMethodCell_1ac4078e9a07dbb90e97bf6f7b55811e66" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>getMethod</name></member>
      <member refid="classproto_1_1ProtoMethodCell_1acade18f92cb88610b06a2ed0baea68ab" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>getSelf</name></member>
      <member refid="classproto_1_1ProtoMethodCellImplementation_1aacf108208e004aabece6437dc6896f30" prot="public" virt="non-virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>invoke</name></member>
      <member refid="classproto_1_1ProtoMethodCellImplementation_1a947bfb13dcf04d26fcf55b4d14b18090" prot="private" virt="non-virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>method</name></member>
      <member refid="classproto_1_1Cell_1aabe702667d6d82a686402a11f886cbfc" prot="public" virt="non-virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>nextCell</name></member>
      <member refid="classproto_1_1Cell_1a6bad5a1de943a41d0ef0f9d876967d2e" prot="public" virt="non-virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>operator new</name></member>
      <member refid="classproto_1_1ProtoMethodCellImplementation_1a0c4a35dc3d25a6fb12a24ab16ac3241a" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>processReferences</name></member>
      <member refid="classproto_1_1ProtoMethodCellImplementation_1a17ae2368108c30b6ca190a4aad74c3bb" prot="public" virt="non-virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>ProtoMethodCellImplementation</name></member>
      <member refid="classproto_1_1ProtoMethodCell_1a3913d179f95113c580ceba74a9a374a5" prot="public" virt="non-virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>self</name></member>
      <member refid="classproto_1_1Cell_1a2e1c6371e6cda1444a1cf181d9733b6f" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>~Cell</name></member>
      <member refid="classproto_1_1ProtoMethodCell_1a28465c21e37e2108068103213196329b" prot="public" virt="virtual"><scope>proto::ProtoMethodCellImplementation</scope><name>~ProtoMethodCell</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
