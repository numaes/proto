<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="DESIGN_8md" kind="file" language="Markdown">
    <compoundname>DESIGN.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Arquitectura<sp/>de<sp/>la<sp/>Biblioteca<sp/>Proto</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Esta<sp/>biblioteca<sp/>implementa<sp/>un<sp/>runtime<sp/>para<sp/>lenguajes<sp/>de<sp/>programación,<sp/>con<sp/>un<sp/>fuerte<sp/>enfoque<sp/>en<sp/>estructuras<sp/>de<sp/>datos<sp/>inmutables,<sp/>un<sp/>modelo<sp/>de<sp/>objetos<sp/>basado<sp/>en<sp/>prototipos<sp/>y<sp/>un<sp/>sistema<sp/>de<sp/>gestión<sp/>de<sp/>memoria<sp/>concurrente<sp/>de<sp/>alto<sp/>rendimiento.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Principios<sp/>de<sp/>Diseño</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">El<sp/>núcleo<sp/>de<sp/>la<sp/>biblioteca<sp/>se<sp/>basa<sp/>en<sp/>los<sp/>siguientes<sp/>principios:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/><sp/>**Inmutabilidad:**<sp/>Todas<sp/>las<sp/>estructuras<sp/>de<sp/>datos<sp/>fundamentales<sp/>(listas,<sp/>tuplas,<sp/>cadenas)<sp/>son<sp/>inmutables.<sp/>Las<sp/>modificaciones<sp/>no<sp/>alteran<sp/>las<sp/>estructuras<sp/>existentes,<sp/>sino<sp/>que<sp/>crean<sp/>nuevas<sp/>versiones<sp/>con<sp/>los<sp/>cambios<sp/>aplicados<sp/>(copy-on-write).<sp/>Esto<sp/>simplifica<sp/>enormemente<sp/>la<sp/>programación<sp/>concurrente<sp/>al<sp/>eliminar<sp/>la<sp/>necesidad<sp/>de<sp/>locks<sp/>complejos<sp/>para<sp/>proteger<sp/>los<sp/>datos.</highlight></codeline>
<codeline><highlight class="normal">2.<sp/><sp/>**Gestión<sp/>de<sp/>Memoria<sp/>Basada<sp/>en<sp/>Celdas:**<sp/>Toda<sp/>la<sp/>memoria<sp/>para<sp/>los<sp/>objetos<sp/>del<sp/>runtime<sp/>se<sp/>gestiona<sp/>a<sp/>través<sp/>de<sp/>celdas<sp/>de<sp/>tamaño<sp/>fijo<sp/>(64<sp/>bytes).<sp/>Este<sp/>enfoque<sp/>elimina<sp/>la<sp/>fragmentación<sp/>de<sp/>memoria<sp/>y<sp/>permite<sp/>el<sp/>uso<sp/>de<sp/>un<sp/>asignador<sp/>(allocator)<sp/>extremadamente<sp/>simple<sp/>y<sp/>rápido.</highlight></codeline>
<codeline><highlight class="normal">3.<sp/><sp/>**Modelo<sp/>de<sp/>Objetos<sp/>Basado<sp/>en<sp/>Prototipos:**<sp/>En<sp/>lugar<sp/>de<sp/>clases<sp/>tradicionales,<sp/>el<sp/>sistema<sp/>utiliza<sp/>un<sp/>modelo<sp/>de<sp/>objetos<sp/>basado<sp/>en<sp/>prototipos,<sp/>donde<sp/>los<sp/>objetos<sp/>heredan<sp/>propiedades<sp/>y<sp/>comportamientos<sp/>directamente<sp/>de<sp/>otros<sp/>objetos.</highlight></codeline>
<codeline><highlight class="normal">4.<sp/><sp/>**Alto<sp/>Rendimiento<sp/>y<sp/>Concurrencia:**<sp/>El<sp/>diseño<sp/>está<sp/>optimizado<sp/>para<sp/>sistemas<sp/>multi-core,<sp/>minimizando<sp/>la<sp/>contención<sp/>de<sp/>locks<sp/>y<sp/>maximizando<sp/>el<sp/>paralelismo.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Gestión<sp/>de<sp/>Memoria<sp/>y<sp/>Garbage<sp/>Collection<sp/>(GC)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">El<sp/>sistema<sp/>de<sp/>gestión<sp/>de<sp/>memoria<sp/>es<sp/>uno<sp/>de<sp/>los<sp/>componentes<sp/>más<sp/>críticos<sp/>y<sp/>sofisticados<sp/>de<sp/>la<sp/>biblioteca.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Asignador<sp/>de<sp/>Memoria<sp/>(Allocator)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Pool<sp/>por<sp/>Thread:**<sp/>Cada<sp/>thread<sp/>del<sp/>sistema<sp/>operativo<sp/>posee<sp/>su<sp/>propio<sp/>pool<sp/>de<sp/>celdas<sp/>de<sp/>memoria<sp/>libres.<sp/>Cuando<sp/>un<sp/>thread<sp/>necesita<sp/>crear<sp/>un<sp/>nuevo<sp/>objeto,<sp/>toma<sp/>una<sp/>celda<sp/>de<sp/>su<sp/>pool<sp/>local.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Asignación<sp/>Rápida:**<sp/>Este<sp/>diseño<sp/>permite<sp/>una<sp/>asignación<sp/>de<sp/>memoria<sp/>casi<sp/>instantánea,<sp/>ya<sp/>que<sp/>no<sp/>requiere<sp/>un<sp/>lock<sp/>global.<sp/>La<sp/>contención<sp/>se<sp/>minimiza,<sp/>permitiendo<sp/>que<sp/>los<sp/>threads<sp/>se<sp/>ejecuten<sp/>en<sp/>paralelo<sp/>sin<sp/>bloquearse<sp/>mutuamente<sp/>durante<sp/>la<sp/>creación<sp/>de<sp/>objetos.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Obtención<sp/>de<sp/>Bloques:**<sp/>Si<sp/>el<sp/>pool<sp/>local<sp/>de<sp/>un<sp/>thread<sp/>se<sp/>agota,<sp/>solicita<sp/>un<sp/>nuevo<sp/>bloque<sp/>de<sp/>celdas<sp/>al<sp/>`ProtoSpace`<sp/>global,<sp/>que<sp/>gestiona<sp/>el<sp/>heap<sp/>principal.<sp/>El<sp/>`ProtoSpace`<sp/>también<sp/>es<sp/>responsable<sp/>de<sp/>la<sp/>asignación<sp/>inicial<sp/>de<sp/>grandes<sp/>bloques<sp/>de<sp/>memoria<sp/>del<sp/>sistema<sp/>operativo.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Garbage<sp/>Collector<sp/>(GC)<sp/>Concurrente</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">El<sp/>GC<sp/>está<sp/>diseñado<sp/>para<sp/>minimizar<sp/>las<sp/>pausas<sp/>y<sp/>el<sp/>impacto<sp/>en<sp/>el<sp/>rendimiento<sp/>de<sp/>la<sp/>aplicación.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Thread<sp/>Dedicado:**<sp/>El<sp/>GC<sp/>se<sp/>ejecuta<sp/>en<sp/>su<sp/>propio<sp/>thread<sp/>(`gcThreadLoop`<sp/>en<sp/>`ProtoSpace.cpp`),<sp/>operando<sp/>en<sp/>paralelo<sp/>con<sp/>los<sp/>threads<sp/>de<sp/>la<sp/>aplicación.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Seguimiento<sp/>de<sp/>Asignaciones<sp/>(`DirtySegment`):**<sp/>Las<sp/>celdas<sp/>recién<sp/>asignadas<sp/>por<sp/>los<sp/>threads<sp/>de<sp/>la<sp/>aplicación<sp/>se<sp/>encadenan<sp/>en<sp/>`DirtySegment`s,<sp/>que<sp/>son<sp/>luego<sp/>procesados<sp/>por<sp/>el<sp/>GC.<sp/>Esto<sp/>permite<sp/>al<sp/>GC<sp/>identificar<sp/>eficientemente<sp/>la<sp/>memoria<sp/>que<sp/>necesita<sp/>ser<sp/>analizada.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Sincronización<sp/>de<sp/>Threads<sp/>(`synchToGC`):**<sp/>Los<sp/>threads<sp/>de<sp/>la<sp/>aplicación<sp/>utilizan<sp/>el<sp/>método<sp/>`synchToGC`<sp/>para<sp/>coordinar<sp/>con<sp/>el<sp/>GC.<sp/>Durante<sp/>una<sp/>fase<sp/>de<sp/>&quot;stop-the-world&quot;<sp/>parcial,<sp/>los<sp/>threads<sp/>se<sp/>detienen<sp/>brevemente<sp/>(`THREAD_STATE_STOPPED`)<sp/>para<sp/>permitir<sp/>que<sp/>el<sp/>GC<sp/>recolecte<sp/>las<sp/>raíces<sp/>de<sp/>forma<sp/>segura.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**GC<sp/>Híbrido<sp/>(Stop-the-World<sp/>Parcial):**<sp/>El<sp/>GC<sp/>no<sp/>detiene<sp/>el<sp/>mundo<sp/>por<sp/>completo<sp/>para<sp/>todo<sp/>su<sp/>ciclo.<sp/>La<sp/>fase<sp/>de<sp/>&quot;stop-the-world&quot;<sp/>es<sp/>muy<sp/>breve<sp/>y<sp/>se<sp/>utiliza<sp/>únicamente<sp/>para<sp/>recolectar<sp/>de<sp/>forma<sp/>segura<sp/>las<sp/>**raíces<sp/>(roots)**<sp/>del<sp/>sistema.<sp/>Las<sp/>raíces<sp/>incluyen<sp/>los<sp/>stacks<sp/>de<sp/>todos<sp/>los<sp/>threads<sp/>activos<sp/>y<sp/>las<sp/>referencias<sp/>globales<sp/>(como<sp/>los<sp/>objetos<sp/>mutables<sp/>gestionados<sp/>por<sp/>`mutableRoot`<sp/>en<sp/>`ProtoSpace`).</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Fases<sp/>Concurrentes<sp/>de<sp/>Mark<sp/>and<sp/>Sweep:**<sp/>Una<sp/>vez<sp/>que<sp/>las<sp/>raíces<sp/>han<sp/>sido<sp/>recolectadas,<sp/>las<sp/>fases<sp/>de<sp/>marcado<sp/>(`mark`)<sp/>y<sp/>limpieza<sp/>(`sweep`)<sp/>se<sp/>ejecutan<sp/>de<sp/>forma<sp/>concurrente<sp/>mientras<sp/>los<sp/>threads<sp/>de<sp/>la<sp/>aplicación<sp/>continúan<sp/>su<sp/>ejecución.<sp/>La<sp/>inmutabilidad<sp/>de<sp/>los<sp/>datos<sp/>es<sp/>clave<sp/>aquí,<sp/>ya<sp/>que<sp/>garantiza<sp/>que<sp/>las<sp/>referencias<sp/>entre<sp/>objetos<sp/>no<sp/>cambiarán<sp/>mientras<sp/>el<sp/>GC<sp/>está<sp/>trabajando.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Ciclo<sp/>de<sp/>Vida<sp/>de<sp/>los<sp/>Objetos<sp/>y<sp/>Limpieza<sp/>por<sp/>Ámbito</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Objetos<sp/>de<sp/>Corta<sp/>Duración:**<sp/>La<sp/>biblioteca<sp/>implementa<sp/>una<sp/>optimización<sp/>para<sp/>objetos<sp/>de<sp/>corta<sp/>duración.<sp/>Cuando<sp/>un<sp/>método<sp/>o<sp/>función<sp/>finaliza,<sp/>todas<sp/>las<sp/>celdas<sp/>de<sp/>memoria<sp/>que<sp/>fueron<sp/>asignadas<sp/>dentro<sp/>de<sp/>su<sp/>ámbito<sp/>y<sp/>que<sp/>no<sp/>son<sp/>parte<sp/>del<sp/>valor<sp/>de<sp/>retorno<sp/>explícito,<sp/>se<sp/>devuelven<sp/>a<sp/>un<sp/>&quot;pool<sp/>de<sp/>análisis&quot;.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Análisis<sp/>Asíncrono:**<sp/>Los<sp/>objetos<sp/>en<sp/>este<sp/>pool<sp/>son<sp/>candidatos<sp/>para<sp/>ser<sp/>liberados.<sp/>El<sp/>GC<sp/>analiza<sp/>de<sp/>forma<sp/>asíncrona<sp/>estas<sp/>celdas<sp/>para<sp/>asegurarse<sp/>de<sp/>que<sp/>no<sp/>haya<sp/>ninguna<sp/>referencia<sp/>viva<sp/>a<sp/>ellas<sp/>desde<sp/>las<sp/>raíces<sp/>del<sp/>sistema.<sp/>Si<sp/>no<sp/>hay<sp/>referencias,<sp/>la<sp/>celda<sp/>se<sp/>devuelve<sp/>al<sp/>pool<sp/>global<sp/>de<sp/>celdas<sp/>libres,<sp/>lista<sp/>para<sp/>ser<sp/>reutilizada.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Eficiencia:**<sp/>Este<sp/>mecanismo<sp/>actúa<sp/>como<sp/>una<sp/>forma<sp/>de<sp/>recolección<sp/>generacional,<sp/>permitiendo<sp/>que<sp/>la<sp/>mayoría<sp/>de<sp/>los<sp/>objetos<sp/>(que<sp/>suelen<sp/>tener<sp/>una<sp/>vida<sp/>corta)<sp/>se<sp/>recolecten<sp/>de<sp/>manera<sp/>muy<sp/>eficiente<sp/>sin<sp/>necesidad<sp/>de<sp/>un<sp/>ciclo<sp/>completo<sp/>de<sp/>mark-and-sweep<sp/>sobre<sp/>todo<sp/>el<sp/>heap.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Estructuras<sp/>de<sp/>Datos<sp/>Inmutables</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">El<sp/>runtime<sp/>`proto`<sp/>proporciona<sp/>implementaciones<sp/>de<sp/>estructuras<sp/>de<sp/>datos<sp/>fundamentales<sp/>que<sp/>son<sp/>inherentemente<sp/>inmutables,<sp/>lo<sp/>que<sp/>contribuye<sp/>a<sp/>la<sp/>seguridad<sp/>y<sp/>la<sp/>concurrencia<sp/>del<sp/>sistema.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Listas<sp/>(`ProtoList`)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Implementadas<sp/>como<sp/>árboles<sp/>balanceados<sp/>(posiblemente<sp/>AVL<sp/>o<sp/>similar,<sp/>dado<sp/>el<sp/>uso<sp/>de<sp/>`leftRotate`,<sp/>`rightRotate`<sp/>y<sp/>`rebalance`).</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Las<sp/>operaciones<sp/>como<sp/>`appendFirst`,<sp/>`appendLast`,<sp/>`insertAt`,<sp/>`setAt`,<sp/>`removeAt`,<sp/>`splitFirst`,<sp/>`splitLast`,<sp/>`removeFirst`,<sp/>`removeLast`<sp/>y<sp/>`removeSlice`<sp/>no<sp/>modifican<sp/>la<sp/>lista<sp/>original,<sp/>sino<sp/>que<sp/>devuelven<sp/>una<sp/>nueva<sp/>lista<sp/>con<sp/>los<sp/>cambios.<sp/>Esto<sp/>garantiza<sp/>la<sp/>persistencia<sp/>de<sp/>la<sp/>estructura<sp/>de<sp/>datos.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Optimizadas<sp/>para<sp/>acceso<sp/>eficiente<sp/>y<sp/>modificaciones<sp/>en<sp/>entornos<sp/>concurrentes.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Tuplas<sp/>(`ProtoTuple`)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Representan<sp/>colecciones<sp/>inmutables<sp/>de<sp/>elementos,<sp/>similares<sp/>a<sp/>las<sp/>tuplas<sp/>en<sp/>Python.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Implementadas<sp/>como<sp/>árboles<sp/>de<sp/>búsqueda<sp/>(posiblemente<sp/>un<sp/>árbol<sp/>B<sp/>o<sp/>similar,<sp/>dado<sp/>el<sp/>uso<sp/>de<sp/>`TupleDictionary`<sp/>para<sp/>la<sp/>gestión<sp/>de<sp/>la<sp/>raíz<sp/>de<sp/>tuplas<sp/>y<sp/>la<sp/>deduplicación).</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Las<sp/>tuplas<sp/>son<sp/>internadas<sp/>(`tupleRoot`<sp/>en<sp/>`ProtoSpace`),<sp/>lo<sp/>que<sp/>significa<sp/>que<sp/>las<sp/>tuplas<sp/>idénticas<sp/>comparten<sp/>la<sp/>misma<sp/>instancia<sp/>en<sp/>memoria,<sp/>optimizando<sp/>el<sp/>uso<sp/>de<sp/>memoria<sp/>y<sp/>las<sp/>comparaciones.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Proporcionan<sp/>acceso<sp/>eficiente<sp/>a<sp/>los<sp/>elementos<sp/>y<sp/>operaciones<sp/>de<sp/>slicing.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Cadenas<sp/>(`ProtoString`)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Las<sp/>cadenas<sp/>son<sp/>inmutables<sp/>y<sp/>se<sp/>construyen<sp/>sobre<sp/>`ProtoTuple`,<sp/>lo<sp/>que<sp/>significa<sp/>que<sp/>se<sp/>benefician<sp/>de<sp/>las<sp/>optimizaciones<sp/>de<sp/>inmutabilidad<sp/>y<sp/>deduplicación<sp/>de<sp/>las<sp/>tuplas.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>Las<sp/>operaciones<sp/>de<sp/>cadena<sp/>como<sp/>concatenación,<sp/>inserción<sp/>y<sp/>eliminación<sp/>también<sp/>devuelven<sp/>nuevas<sp/>instancias<sp/>de<sp/>cadena.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Modelo<sp/>de<sp/>Objetos<sp/>Basado<sp/>en<sp/>Prototipos</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">El<sp/>sistema<sp/>`proto`<sp/>implementa<sp/>un<sp/>modelo<sp/>de<sp/>objetos<sp/>flexible<sp/>y<sp/>dinámico<sp/>basado<sp/>en<sp/>prototipos,<sp/>similar<sp/>a<sp/>JavaScript<sp/>o<sp/>Self.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Objetos<sp/>(`ProtoObjectCell`):**<sp/>Los<sp/>objetos<sp/>son<sp/>representados<sp/>por<sp/>`ProtoObjectCellImplementation`,<sp/>que<sp/>contienen<sp/>un<sp/>enlace<sp/>a<sp/>su<sp/>`parent`<sp/>(prototipo)<sp/>y<sp/>un<sp/>`ProtoSparseList`<sp/>de<sp/>`attributes`.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Herencia<sp/>Basada<sp/>en<sp/>Prototipos:**<sp/>Los<sp/>objetos<sp/>heredan<sp/>propiedades<sp/>y<sp/>métodos<sp/>de<sp/>sus<sp/>objetos<sp/>`parent`.<sp/>La<sp/>búsqueda<sp/>de<sp/>atributos<sp/>(`getAttribute`)<sp/>recorre<sp/>la<sp/>cadena<sp/>de<sp/>prototipos<sp/>hasta<sp/>encontrar<sp/>el<sp/>atributo<sp/>o<sp/>llegar<sp/>al<sp/>final<sp/>de<sp/>la<sp/>cadena.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Clonación<sp/>y<sp/>Creación<sp/>de<sp/>Hijos<sp/>(`clone`,<sp/>`newChild`):**<sp/>Los<sp/>objetos<sp/>pueden<sp/>ser<sp/>clonados<sp/>(`clone`)<sp/>para<sp/>crear<sp/>nuevas<sp/>instancias<sp/>con<sp/>los<sp/>mismos<sp/>atributos,<sp/>o<sp/>se<sp/>pueden<sp/>crear<sp/>nuevos<sp/>objetos<sp/>que<sp/>hereden<sp/>directamente<sp/>de<sp/>un<sp/>prototipo<sp/>existente<sp/>(`newChild`).</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Atributos<sp/>Dinámicos:**<sp/>Los<sp/>atributos<sp/>pueden<sp/>ser<sp/>añadidos<sp/>o<sp/>modificados<sp/>dinámicamente<sp/>en<sp/>los<sp/>objetos.<sp/>Las<sp/>operaciones<sp/>`setAttribute`<sp/>y<sp/>`hasAttribute`<sp/>gestionan<sp/>estos<sp/>atributos.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Llamada<sp/>a<sp/>Métodos<sp/>(`call`):**<sp/>El<sp/>mecanismo<sp/>de<sp/>llamada<sp/>a<sp/>métodos<sp/>permite<sp/>invocar<sp/>funciones<sp/>asociadas<sp/>a<sp/>objetos,<sp/>resolviendo<sp/>el<sp/>método<sp/>a<sp/>través<sp/>de<sp/>la<sp/>cadena<sp/>de<sp/>prototipos.</highlight></codeline>
<codeline><highlight class="normal">-<sp/><sp/><sp/>**Objetos<sp/>Mutables:**<sp/>Aunque<sp/>las<sp/>estructuras<sp/>de<sp/>datos<sp/>fundamentales<sp/>son<sp/>inmutables,<sp/>el<sp/>sistema<sp/>soporta<sp/>la<sp/>noción<sp/>de<sp/>objetos<sp/>mutables<sp/>(`mutable_ref`<sp/>en<sp/>`ProtoObjectCellImplementation`<sp/>y<sp/>`mutableRoot`<sp/>en<sp/>`ProtoSpace`).<sp/>Esto<sp/>permite<sp/>que<sp/>ciertos<sp/>objetos<sp/>se<sp/>comporten<sp/>de<sp/>manera<sp/>mutable,<sp/>mientras<sp/>que<sp/>el<sp/>GC<sp/>gestiona<sp/>su<sp/>visibilidad<sp/>y<sp/>recolección<sp/>de<sp/>forma<sp/>segura<sp/>en<sp/>un<sp/>entorno<sp/>concurrente.</highlight></codeline>
<codeline></codeline>
    </programlisting>
    <location file="DESIGN.md"/>
  </compounddef>
</doxygen>
